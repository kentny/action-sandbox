name: Build and Push

on: [push]
# on:
#   push:
#     tags:
#       - v*

jobs:
  frontend-test-build-image:
    runs-on: ubuntu-20.04
    env:
      TEMP_IMAGE_NAME: temp-frontend-image
    timeout-minutes: 10
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v3

      - name: Test
        run: |
          docker build --target production -t $TEMP_IMAGE_NAME:latest .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push an image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_FRONTEND_SERVER_REPOSITORY }}
        run: |
          docker image tag $TEMP_IMAGE_NAME:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  api-test-build-image:
    runs-on: ubuntu-20.04
    env:
      TEMP_IMAGE_NAME: temp-api-image
    timeout-minutes: 10
    defaults:
      run:
        working-directory: api

    steps:
      - uses: actions/checkout@v3

      - name: Test
        run: |
          docker build --target production -t $TEMP_IMAGE_NAME:latest  .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push an image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_API_SERVER_REPOSITORY }}
        run: |
          docker image tag $TEMP_IMAGE_NAME:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  # deploy:
  #   runs-on: ubuntu-20.04
  #   needs: [frontend-image-build-and-push]
  #   timeout-minutes: 10

  #   steps:
  #     - uses: actions/checkout@v3

  #     - run: |
  #       docker compo
